# action.yml
# Code generated by protoc-gen-liquibase. DO NOT EDIT.
name: 'Liquibase Checks Disable Action'
description: |
  Disable an enabled check for current configuration
inputs:
  autoEnableNewChecks: # bool
    description: 'Automatically enable new quality checks in liquibase.checks.conf file when they are available. Options: [true|false]'
    required: false
  autoUpdate: # bool
    description: 'Allows automatic backup and updating of liquibase.checks.conf file when new quality checks are available, or for file format changes. Options: [on|off]'
    required: false
  checkName: # string
    description: '*required* Comma separated list of names of checks to disable'
    required: true
  checksSettingsFile: # string
    description: 'Relative or fully qualified path to a configuration file for checks execution'
    required: false
  addEmptyMdcValues: # bool
    description: 'If true, a subset of the MdcKeys, as defined by product, will be set to empty strings upon system startup.'
    required: false
  allowDuplicatedChangesetIdentifiers: # bool
    description: 'Allows duplicated changeset identifiers without failing Liquibase execution.'
    required: false
  alwaysDropInsteadOfReplace: # bool
    description: 'If true, drop and recreate a view instead of replacing it.'
    required: false
  alwaysOverrideStoredLogicSchema: # bool
    description: 'When generating SQL for createProcedure, should the procedure schema be forced to the default schema if no schemaName attribute is set?'
    required: false
  autoReorg: # bool
    description: 'Should Liquibase automatically include REORG TABLE commands when needed?'
    required: false
  changelogLockPollRate: # string
    description: 'Number of seconds wait between checks to the changelog lock when it is locked'
    required: false
  changelogLockWaitTimeInMinutes: # string
    description: 'Number of minutes to wait for the changelog lock to be available before giving up'
    required: false
  changelogParseMode: # string
    description: 'Configures how to handle unknown fields in changelog files. Possible values: STRICT which causes parsing to fail, and LAX which continues with the parsing.'
    required: false
  classpath: # string
    description: 'Additional classpath entries to use'
    required: false
  convertDataTypes: # bool
    description: 'Should Liquibase convert to/from STANDARD data types. Applies to both snapshot and update commands.'
    required: false
  customLogDataFile: # string
    description: '[PRO]Relative or fully qualified path to a yaml file containing key:value data to inject or exclude data from JSON structured logs. Learn more at https://docs.liquibase.com/structured-logging'
    required: false
  customLogDataFrequency: # string
    description: '[PRO]The frequency that the custom log data will be entered into the logs. Available options are: ONCE,REPEATED'
    required: false
  databaseChangelogLockTableName: # string
    description: 'Name of table to use for tracking concurrent Liquibase usage'
    required: false
  databaseChangelogTableName: # string
    description: 'Name of table to use for tracking change history'
    required: false
  databaseClass: # string
    description: 'Class to use for Database implementation'
    required: false
  dbclhistoryCaptureExtensions: # bool
    description: 'If true, extensions are captured in the history table'
    required: false
  dbclhistoryCaptureSql: # bool
    description: 'If true, executed SQL is captured in the history table'
    required: false
  dbclhistoryEnabled: # bool
    description: '[PRO]This property enables Liquibase Pro users to store a record of all database changing liquibase operations in a new table DATABASECHANGELOGHISTORY. This table includes records of rollback, dropalls, and repeated runOnChange type activity, which is not available in the standard DATABASECHANGELOG table.'
    required: false
  dbclhistorySeverity: # int32
    description: 'The exit code to use if an exception is encountered while recording history events'
    required: false
  dbclhistoryTableName: # string
    description: ''
    required: false
  ddlLockTimeout: # int32
    description: 'The DDL_LOCK_TIMEOUT parameter indicates the number of seconds a DDL command should wait for the locks to become available before throwing the resource busy error message. This applies only to Oracle databases.'
    required: false
  defaultsFile: # string
    description: 'File with default Liquibase properties'
    required: false
  diffColumnOrder: # bool
    description: 'Should Liquibase compare column order in diff operation?'
    required: false
  driver: # string
    description: 'Database driver class'
    required: false
  driverPropertiesFile: # string
    description: 'Driver-specific properties'
    required: false
  duplicateFileMode: # string
    description: 'How to handle multiple files being found in the search path that have duplicate paths. Options are WARN (log warning and choose one at random) or ERROR (fail current operation)'
    required: false
  errorOnCircularIncludeAll: # bool
    description: 'Throw an error if Liquibase detects that an includeAll will cause a circular reference (and thus a changelog parse error).'
    required: false
  fileEncoding: # string
    description: 'Encoding to use when reading files. Valid values include: UTF-8, UTF-16, UTF-16BE, UTF-16LE, US-ASCII, or OS to use the system configured encoding.'
    required: false
  filterLogMessages: # bool
    description: 'DEPRECATED: No longer used'
    required: false
  flowVerboseToString: # bool
    description: 'If true, display a more verbose output for the FlowFile toString representation'
    required: false
  generateChangesetCreatedValues: # bool
    description: 'Should Liquibase include a "created" attribute in diff/generateChangelog changesets with the current datetime'
    required: false
  generatedChangesetIdsContainsDescription: # bool
    description: 'Should Liquibase include the change description in the id when generating changesets?'
    required: false
  headless: # bool
    description: 'Force Liquibase to think it has no access to a keyboard'
    required: false
  includeCatalogInSpecification: # bool
    description: 'Should Liquibase include the catalog name when determining equality?'
    required: false
  includeMatchingTagInRollbackOldest: # bool
    description: 'If set to true, and there are multiple identical tags in the database changelog table, all of the newer matching tags will be rolled back while rolling back to the oldest tag. The default value for this option was false for all Liquibase versions equal to or older than 4.25.1.'
    required: false
  includeRelationsForComputedColumns: # bool
    description: 'If true, the parent relationship for computed columns is preserved in snapshot-dependent commands: snapshot and diff'
    required: false
  includeSystemClasspath: # bool
    description: 'Include the system classpath when resolving classes at runtime'
    required: false
  licenseKey: # string
    description: 'Liquibase Pro or Liquibase Labs license key used to unlock paid capabilities. Get a free trial at https://liquibase.com/trial and use in CLI or add liquibase.licenseKey=<yourKey> into your defaults file.'
    required: false
  liquibaseCatalogName: # string
    description: 'Catalog to use for Liquibase objects'
    required: false
  liquibaseSchemaName: # string
    description: 'Schema to use for Liquibase objects'
    required: false
  liquibaseTablespaceName: # string
    description: 'Tablespace to use for Liquibase objects'
    required: false
  logChannels: # string
    description: 'Controls which log channels have their level set by the liquibase.logLevel setting. Comma separate multiple values. To set the level of all channels, use "all". Example: liquibase,org.mariadb.jdbc'
    required: false
  logFile: # string
    description: ''
    required: false
  logFormat: # string
    description: 'Sets the format of log output to console or log files. Open Source users default to unstructured "TEXT" logs to the console or output log files. Pro users have the option to set value as "JSON" or "JSON_PRETTY" to enable json-structured log files to the console or output log files.'
    required: false
  logLevel: # string
    description: 'Controls which logs get set to stderr AND to any log file. The CLI defaults, if log file set, to SEVERE. Others vary by integration. The official log levels are: OFF, SEVERE, WARNING, INFO, FINE'
    required: false
  mirrorConsoleMessagesToLog: # bool
    description: 'When set to true, the console messages are mirrored to the logs as [liquibase.ui] to provide a more complete picture of liquibase operations to log analysis tools. Set to false to change this behavior.'
    required: false
  mirrorOutputToConsole: # bool
    description: '[PRO]When set to true, console output will be mirrored to both the specified output-file and the console. If output-file is not set, the "mirror-output-to-console" argument has no effect.'
    required: false
  missingPropertyMode: # string
    description: 'How to handle changelog property expressions where a value is not set. For example, a string "${address}" when no "address" property was defined. Values can be: "preserve" which leaves the string as-is, "empty" which replaces it with an empty string, or "error" which stops processing with an error.'
    required: false
  monitorPerformance: # string
    description: 'Enable performance tracking. Set to "false" to disable. If set to "true", data is stored to a `liquibase-TIMESTAMP.jfr` file in your working directory. Any other value will enable tracking and be used as the name of the file to write the data to.'
    required: false
  nativeExecutor: # string
    description: 'Custom executor that can specified'
    required: false
  onMissingIncludeChangelog: # string
    description: 'If set to WARN, then liquibase will not throw exception on missing changelog file, instead will show a warning message.'
    required: false
  onMissingSqlFile: # string
    description: 'If set to WARN, then Liquibase will not throw exception on missing sqlFile inside a sqlFile change type, instead will show a warning message'
    required: false
  outputFile: # string
    description: ''
    required: false
  outputFileEncoding: # string
    description: 'Encoding to use when writing files'
    required: false
  outputLineSeparator: # string
    description: 'Line separator for output'
    required: false
  preserveSchemaCase: # bool
    description: 'If true, Liquibase treats schema and catalog names as case sensitive'
    required: false
  proForceOnPartialChanges: # bool
    description: 'If true, rollback execution will be forced when having partial changes that needs to be rolled back. Defaults to false.'
    required: false
  proGlobalEndDelimiter: # string
    description: '[PRO]The default end delimiter to use for all change sets'
    required: false
  proGlobalEndDelimiterPrioritized: # bool
    description: '[PRO]If true, the global end delimiter overrides all other settings'
    required: false
  proLicenseKey: # string
    description: 'DEPRECATED: Liquibase Pro license key used to unlock paid capabilities. Get a free trial at https://www.liquibase.com/protrial and use in CLI or add liquibase.pro.licenseKey=<yourKey> into your defaults file.'
    required: false
  proMarkUnusedNotDrop: # bool
    description: 'If a column would be dropped in a diffChangeLog, call markUnused instead if set to true'
    required: false
  proSqlInline: # bool
    description: 'If true, generate changeSets with SQL-based changes inlined instead of saving them to an external file'
    required: false
  proSynonymsDropPublic: # bool
    description: 'If false, do not drop public synonyms in diffChangeLog/dropAll'
    required: false
  proStrict: # bool
    description: '[PRO]If true, the Liquibase operations will fail when specified paths to Pro resource files (flow files, checks settings files, native executor conf files, etc) or rollback scripts are missing or empty.'
    required: false
  promptForNonLocalDatabase: # bool
    description: 'Should Liquibase prompt if a non-local database is being accessed'
    required: false
  propertyProviderClass: # string
    description: 'Implementation of Properties class to provide additional driver properties'
    required: false
  reportsEnabled: # bool
    description: '[PRO]Enable or disable reporting.'
    required: false
  reportsFormat: # string
    description: '[PRO]The format of the report. Currently, can only be set to "html".'
    required: false
  reportsName: # string
    description: '[PRO]The name of the reports.'
    required: false
  reportsOpen: # bool
    description: '[PRO]Open the newly generated report in your default browser.'
    required: false
  reportsPath: # string
    description: '[PRO]The path to the directory to generate the reports.'
    required: false
  reportsQuiet: # bool
    description: '[PRO]Minimize the amount of logging when generating reports.'
    required: false
  searchPath: # string
    description: 'Complete list of Location(s) to search for files such as changelog files in. Multiple paths can be specified by separating them with commas.'
    required: false
  secureParsing: # bool
    description: 'If true, remove functionality from file parsers which could be used insecurely. Examples include (but not limited to) disabling remote XML entity support.'
    required: false
  shouldRun: # bool
    description: 'Should Liquibase commands execute'
    required: false
  shouldSnapshotData: # bool
    description: 'Should Liquibase snapshot data by default?'
    required: false
  showBanner: # bool
    description: 'If true, show a Liquibase banner on startup.'
    required: false
  showHiddenArgs: # bool
    description: 'If true, all command arguments marked as hidden will be shown in the help output, ignoring the hidden flag. NOTE, due to the order of value provider loading at such an early point in Liquibase startup, you MUST set this as a environment variable. Command line parameters will not be recognized.'
    required: false
  sqlAlwaysSetFetchSize: # bool
    description: 'If true, all queries will have their fetch size set to the fetch size defined in their database implementation. This has the effect of informing the driver how many rows should be fetched when processing the result set. This is not guaranteed to be respected by the driver, but if respected, should improve query performance significantly.'
    required: false
  sqlLogLevel: # string
    description: 'Level to log SQL statements to'
    required: false
  sqlShowSqlWarnings: # bool
    description: 'Show SQLWarning messages'
    required: false
  strict: # bool
    description: 'If true, Liquibase enforces certain best practices and proactively looks for common errors'
    required: false
  supportPropertyEscaping: # bool
    description: 'Support escaping changelog parameters using a colon. Example: ${:user.name}'
    required: false
  supportsMethodValidationLevel: # string
    description: 'Controls the level of validation performed on the supports method of Change classes. Options are OFF, WARN, FAIL.'
    required: false
  trimLoadDataFileHeader: # bool
    description: 'If true column headers will be trimmed in case they were specified with spaces in the file.'
    required: false
  uiService: # string
    description: 'Changes the default UI Service Logger used by Liquibase. Options are CONSOLE or LOGGER.'
    required: false
  useProcedureSchema: # bool
    description: 'If set to true (default value), createProcedure tags with a set schemaName will modify the procedure body with the given schema name.'
    required: false
  validateXmlChangelogFiles: # bool
    description: 'Will perform XSD validation of XML changelog files. When many XML changelog files are included, this validation may impact Liquibase performance. Defaults to true.'
    required: false
  workaroundOracleClobCharacterLimit: # bool
    description: 'If true, long strings in Oracle will be chunked at 4000 characters when an insert statement is run, to avoid running afoul of Oracle"s 4000 character limit for insert statements to clob type columns (which appears as "ORA-01704: string literal too long.")'
    required: false
runs:
  using: 'docker'
  image: 'Dockerfile'
  args:
    - ${{ inputs.autoEnableNewChecks }}
    - ${{ inputs.autoUpdate }}
    - ${{ inputs.checkName }}
    - ${{ inputs.checksSettingsFile }}
    - ${{ inputs.addEmptyMdcValues }}
    - ${{ inputs.allowDuplicatedChangesetIdentifiers }}
    - ${{ inputs.alwaysDropInsteadOfReplace }}
    - ${{ inputs.alwaysOverrideStoredLogicSchema }}
    - ${{ inputs.autoReorg }}
    - ${{ inputs.changelogLockPollRate }}
    - ${{ inputs.changelogLockWaitTimeInMinutes }}
    - ${{ inputs.changelogParseMode }}
    - ${{ inputs.classpath }}
    - ${{ inputs.convertDataTypes }}
    - ${{ inputs.customLogDataFile }}
    - ${{ inputs.customLogDataFrequency }}
    - ${{ inputs.databaseChangelogLockTableName }}
    - ${{ inputs.databaseChangelogTableName }}
    - ${{ inputs.databaseClass }}
    - ${{ inputs.dbclhistoryCaptureExtensions }}
    - ${{ inputs.dbclhistoryCaptureSql }}
    - ${{ inputs.dbclhistoryEnabled }}
    - ${{ inputs.dbclhistorySeverity }}
    - ${{ inputs.dbclhistoryTableName }}
    - ${{ inputs.ddlLockTimeout }}
    - ${{ inputs.defaultsFile }}
    - ${{ inputs.diffColumnOrder }}
    - ${{ inputs.driver }}
    - ${{ inputs.driverPropertiesFile }}
    - ${{ inputs.duplicateFileMode }}
    - ${{ inputs.errorOnCircularIncludeAll }}
    - ${{ inputs.fileEncoding }}
    - ${{ inputs.filterLogMessages }}
    - ${{ inputs.flowVerboseToString }}
    - ${{ inputs.generateChangesetCreatedValues }}
    - ${{ inputs.generatedChangesetIdsContainsDescription }}
    - ${{ inputs.headless }}
    - ${{ inputs.includeCatalogInSpecification }}
    - ${{ inputs.includeMatchingTagInRollbackOldest }}
    - ${{ inputs.includeRelationsForComputedColumns }}
    - ${{ inputs.includeSystemClasspath }}
    - ${{ inputs.licenseKey }}
    - ${{ inputs.liquibaseCatalogName }}
    - ${{ inputs.liquibaseSchemaName }}
    - ${{ inputs.liquibaseTablespaceName }}
    - ${{ inputs.logChannels }}
    - ${{ inputs.logFile }}
    - ${{ inputs.logFormat }}
    - ${{ inputs.logLevel }}
    - ${{ inputs.mirrorConsoleMessagesToLog }}
    - ${{ inputs.mirrorOutputToConsole }}
    - ${{ inputs.missingPropertyMode }}
    - ${{ inputs.monitorPerformance }}
    - ${{ inputs.nativeExecutor }}
    - ${{ inputs.onMissingIncludeChangelog }}
    - ${{ inputs.onMissingSqlFile }}
    - ${{ inputs.outputFile }}
    - ${{ inputs.outputFileEncoding }}
    - ${{ inputs.outputLineSeparator }}
    - ${{ inputs.preserveSchemaCase }}
    - ${{ inputs.proForceOnPartialChanges }}
    - ${{ inputs.proGlobalEndDelimiter }}
    - ${{ inputs.proGlobalEndDelimiterPrioritized }}
    - ${{ inputs.proLicenseKey }}
    - ${{ inputs.proMarkUnusedNotDrop }}
    - ${{ inputs.proSqlInline }}
    - ${{ inputs.proSynonymsDropPublic }}
    - ${{ inputs.proStrict }}
    - ${{ inputs.promptForNonLocalDatabase }}
    - ${{ inputs.propertyProviderClass }}
    - ${{ inputs.reportsEnabled }}
    - ${{ inputs.reportsFormat }}
    - ${{ inputs.reportsName }}
    - ${{ inputs.reportsOpen }}
    - ${{ inputs.reportsPath }}
    - ${{ inputs.reportsQuiet }}
    - ${{ inputs.searchPath }}
    - ${{ inputs.secureParsing }}
    - ${{ inputs.shouldRun }}
    - ${{ inputs.shouldSnapshotData }}
    - ${{ inputs.showBanner }}
    - ${{ inputs.showHiddenArgs }}
    - ${{ inputs.sqlAlwaysSetFetchSize }}
    - ${{ inputs.sqlLogLevel }}
    - ${{ inputs.sqlShowSqlWarnings }}
    - ${{ inputs.strict }}
    - ${{ inputs.supportPropertyEscaping }}
    - ${{ inputs.supportsMethodValidationLevel }}
    - ${{ inputs.trimLoadDataFileHeader }}
    - ${{ inputs.uiService }}
    - ${{ inputs.useProcedureSchema }}
    - ${{ inputs.validateXmlChangelogFiles }}
    - ${{ inputs.workaroundOracleClobCharacterLimit }}
branding:
  icon: database
  color: red
